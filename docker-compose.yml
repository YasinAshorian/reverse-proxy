version: "2"
services:
    reverseproxy:
        image: nginx
        container_name: nginx-docker
        volumes:
            - "./etc/nginx/conf.d:/etc/nginx/conf.d"
            - "./etc/ssl:/etc/ssl"
            - "./web:/var/www/html"
            - "./etc/nginx/conf.d/default.template:/etc/nginx/conf.d/default.template"
            - "./etc/nginx/nginx.conf:/etc/nginx/nginx.conf"
            - "./etc/nginx/log/error.log:/var/log/nginx/error.log"
        ports:
            - "80:80"
            - "443:443"
        environment:
            - NGINX_HOST=${NGINX_HOST}
        command: /bin/bash -c "envsubst '$$NGINX_HOST' < /etc/nginx/conf.d/default.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
        restart: always
        depends_on:
            - mysqldb
            - web
    web:
        image: apachemy
        container_name: apache-docker
        volumes:
            - "./web:/var/www/site"
            - "./etc/apache/httpd.conf:/usr/local/apache2/conf/httpd.conf"
            - "./etc/apache/sites-available:/etc/apache2/sites-available"
            - "./etc/apache/sites-enabled:/etc/apache2/sites-enabled"
        ports:
            - "8099:80"
        restart: always
        depends_on:
            - mysqldb
    myadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        ports:
            - "8080:80"
        environment:
            - PMA_ARBITRARY=1
            - PMA_HOST=${MYSQL_HOST}
        restart: always
        depends_on:
            - mysqldb
    mysqldb:
        image: mysql
        container_name: ${MYSQL_HOST}
        restart: always
        env_file:
            - ".env"
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
        ports:
            - "8989:3306"
        volumes:
            - "./data/db/mysql:/var/lib/mysql"
